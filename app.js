// ==== ‡πÉ‡∏™‡πà‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÑ‡∏ü‡∏•‡πå app.js (‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà) ====
const ADMIN_UIDS = ['Ucadb3c0f63ada96c0432a0aede267ff9'];
function isAdmin(uid){ return ADMIN_UIDS.includes(String(uid)); }

// ================== CONFIG ==================
const registerUrl    = "/api/register";
const scoreUpdateUrl = "/api/redeem";
const scoreFetchUrl  = "/api/get-score";
const scoreHistoryUrl  = "/api/score-history";   // GET ?uid=
const liffID         = "2007053300-QoEvbXyn"; // <- ‡πÉ‡∏ä‡πâ LIFF ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö
const TIER = {
  GOLD: 100,
  DIAMOND: 350,
  SUPREME: 800,
  MAX: 1000 // ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
};

// ================== UI: PROGRESS & TIER ==================
function setProgress(score) {
  // 1) ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ß‡∏á
  const totalLength = 126; // ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö stroke-dasharray ‡πÉ‡∏ô SVG
  const percent = Math.max(0, Math.min(1, score / 100)); // 100 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô = ‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ß‡∏á
  const offset = totalLength * (1 - percent);
  const curve = document.getElementById("progressCurve");
  if (curve) curve.style.strokeDashoffset = String(offset);

  // 2) ‡∏Ñ‡∏¥‡∏î tier + next target
  let tierText = "‡∏£‡∏∞‡∏î‡∏±‡∏ö Silver";
  let bgClass  = "bg-silver";
  let nextTierScore = TIER.GOLD;

  if (score >= TIER.SUPREME) {
    tierText = "‡∏£‡∏∞‡∏î‡∏±‡∏ö Supreme"; bgClass = "bg-supreme"; nextTierScore = TIER.MAX;
  } else if (score >= TIER.DIAMOND) {
    tierText = "‡∏£‡∏∞‡∏î‡∏±‡∏ö Diamond"; bgClass = "bg-diamond"; nextTierScore = TIER.SUPREME;
  } else if (score >= TIER.GOLD) {
    tierText = "‡∏£‡∏∞‡∏î‡∏±‡∏ö Gold";    bgClass = "bg-gold";    nextTierScore = TIER.DIAMOND;
  }

  // 3) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô mood ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  const userCard = document.getElementById('userCard');
  if (userCard) {
    userCard.classList.remove("bg-silver","bg-gold","bg-diamond","bg-supreme");
    userCard.classList.add(bgClass);
  }

  // 4) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ tier ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const tierLabel = document.getElementById('tier-label');
  if (tierLabel) tierLabel.textContent = tierText;

  // 5) ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Badge ‡∏™‡∏µ + ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  const badge = document.getElementById('tierBadge');
  if (badge) {
    badge.textContent = tierText;
    badge.classList.remove('tier-silver','tier-gold','tier-diamond','tier-supreme');
    const classMap = {
      '‡∏£‡∏∞‡∏î‡∏±‡∏ö Silver':  'tier-silver',
      '‡∏£‡∏∞‡∏î‡∏±‡∏ö Gold':    'tier-gold',
      '‡∏£‡∏∞‡∏î‡∏±‡∏ö Diamond': 'tier-diamond',
      '‡∏£‡∏∞‡∏î‡∏±‡∏ö Supreme': 'tier-supreme'
    };
    badge.classList.add(classMap[tierText]);
  }

  // 6) ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
  const nextTierEl = document.getElementById('next-tier');
  if (nextTierEl) {
    if (score >= TIER.SUPREME) {
      nextTierEl.innerHTML = `‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß üéâ`;
    } else {
      const nextName =
        tierText === '‡∏£‡∏∞‡∏î‡∏±‡∏ö Gold'    ? 'Diamond' :
        tierText === '‡∏£‡∏∞‡∏î‡∏±‡∏ö Diamond' ? 'Supreme' : 'Gold';
      const remaining = Math.max(0, nextTierScore - score);
      nextTierEl.innerHTML =
        `‡∏™‡∏∞‡∏™‡∏°‡∏≠‡∏µ‡∏Å <strong>${remaining}</strong> ‡∏û‡πâ‡∏≠‡∏¢‡∏ó‡πå ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô <strong>31/12/68</strong> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô <strong>${nextName}</strong>`;
    }
  }
}

// ================== DATA FLOW ==================
function loadUserScore(uid) {
  return fetch(`${scoreFetchUrl}?uid=${encodeURIComponent(uid)}`)
    .then(res => res.json())
    .then(response => {
      $.LoadingOverlay("hide");

      if (response.status === 'success') {
        const userData = response.data || {};
        // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        $('#username').text(userData.name || '‚Äî');
        $('#phone').html(`<i class="fa-solid fa-phone"></i> ${userData.tel || ''}`);
        $('#profilePic').attr('src', $('#profilePic').attr('src') || 'https://placehold.co/120x120');

        const score = parseInt(userData.score || "0", 10);
        $('#points').text(score);
        setProgress(score);

        // ‡∏ã‡πà‡∏≠‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£
        $('#regSection').hide();
      }
      else if (response.status === 'not found') {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        $('#regSection').show();
      }
      else {
        Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", response.message || "‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (API Error)", "error");
      }
    })
    .catch(() => {
      $.LoadingOverlay("hide");
      Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Server ‡πÑ‡∏î‡πâ", "error");
    });
}

function refreshUserScore() {
  const uid = $('#uid').val();
  if (!uid) return;
  $.LoadingOverlay("show", { image:"", fontawesome:"fa fa-spinner fa-spin", text:"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..." });
  loadUserScore(uid);
}


// ================== REDEEM ==================
function submitSecretCode() {
  const code = $('#secretCode').val().trim();
  if (!code) return Swal.fire("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏•‡∏±‡∏ö");

  $.LoadingOverlay("show");
  fetch(scoreUpdateUrl, {
    method: "POST",
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ uid: $('#uid').val(), code: code, type: 'MANUAL' })
  })
  .then(res => res.json())
  .then(data => {
    $.LoadingOverlay("hide");
    if (data.status === "success") {
      Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", `‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡πâ‡∏ß (+${data.point})`, "success");
      $('#scoreModal').modal('hide');
      refreshUserScore();
    } else if (data.status === "used") {
      Swal.fire("‡∏£‡∏´‡∏±‡∏™‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß", data.message || "‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß", "warning");
    } else if (data.status === "invalid") {
      Swal.fire("‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", data.message || "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", "error");
    } else {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", data.message || "‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á", "error");
    }
  })
  .catch(() => {
    $.LoadingOverlay("hide");
    Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ", "error");
  });
}

// ================== QR SCAN (Modal) ==================
let html5QrcodeScanner = null;

function onScanSuccess(decodedText) {
  if (html5QrcodeScanner) html5QrcodeScanner.clear();
  $('#scoreModal').modal('hide');
  $.LoadingOverlay("show");

  fetch(scoreUpdateUrl, {
    method: "POST",
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ uid: $('#uid').val(), code: decodedText, type: 'SCAN' })
  })
  .then(res => res.json())
  .then(data => {
    $.LoadingOverlay("hide");
    if (data.status === "success") {
      Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", `‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å QR ‡πÅ‡∏•‡πâ‡∏ß (+${data.point})`, "success");
      refreshUserScore();
    } else if (data.status === "used") {
      Swal.fire("‡∏£‡∏´‡∏±‡∏™‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß", data.message || "QR ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß", "warning");
    } else if (data.status === "invalid") {
      Swal.fire("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ QR ‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ", data.message || "QR ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", "error");
    } else {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", data.message || "‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á", "error");
    }
  })
  .catch(() => {
    $.LoadingOverlay("hide");
    Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô", "error");
  });
}

$('#scoreModal').on('shown.bs.modal', function () {
  if (!html5QrcodeScanner) {
    html5QrcodeScanner = new Html5QrcodeScanner("qr-reader", { fps: 10, qrbox: 250 });
  }
  html5QrcodeScanner.render(onScanSuccess);
});
$('#scoreModal').on('hidden.bs.modal', function () {
  if (html5QrcodeScanner) html5QrcodeScanner.clear();
});

// ================== INIT (LIFF + First Load) ==================
$(document).ready(function () {
  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏´‡∏•‡∏î
  $.LoadingOverlay("show", { image:"", fontawesome:"fa fa-spinner fa-spin", text:"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..." });

  liff.init({ liffId: liffID }).then(() => {
    if (liff.isLoggedIn()) {
      liff.getProfile().then(profile => {
        const uid = profile.userId;
        $('#uid').val(uid);
        $('#profilePic').attr('src', profile.pictureUrl || 'https://placehold.co/60x60');
        loadUserScore(uid);
        if (isAdmin(uid)) {
          $('#btnAdmin')
            .removeClass('d-none')
            .attr('href', '/admin.html?uid=' + encodeURIComponent(uid));
        }
      });
    } else {
      liff.login();
    }
  }).catch((e) => {
    console.error(e);
    $.LoadingOverlay("hide");
    Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏° LIFF ‡πÑ‡∏î‡πâ", "error");
  });

  // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  $('#dataForm').ajaxForm({
    url: registerUrl,
    type: 'POST',
    dataType: 'json',
    beforeSubmit: function () {
      Swal.fire({ title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...', allowOutsideClick: false, didOpen: () => Swal.showLoading() });
    },
    success: function (response) {
      if (response.status === 'success') {
        Swal.fire({ icon: 'success', title: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß' });
        $('#username').text($('#name').val());
        $('#phone').html('<i class="fa-solid fa-phone"></i> ' + $('#telephone').val());
        $('#points').text('0');
        setProgress(0);
        $('#regSection').hide();
      } else if (response.status === 'error' && response.message === 'User already registered') {
        Swal.fire({ icon: 'warning', title: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ã‡πâ‡∏≥!', text: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß' });
      } else {
        Swal.fire({ icon: 'error', title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!', text: response.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ' });
      }
    },
    error: function () {
      Swal.fire({ icon: 'error', title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!', text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ' });
    }
  });
});
